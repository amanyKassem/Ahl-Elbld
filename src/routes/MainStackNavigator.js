import React from "react";import {View, Image, I18nManager, Text} from 'react-native';import COLORS from "../consts/colors";import { createStackNavigator } from '@react-navigation/stack';import {createDrawerNavigator} from '@react-navigation/drawer';import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';import styles from '../../assets/styles'import CustomDrawerContent from './CustomDrawerContent'import i18n from "../../locale/i18n";import {useDispatch, useSelector} from "react-redux";import {logout, tempAuth} from '../actions';import SelectLoc 				from "../components/SelectLoc";import Home                     from "../components/Home";import Notifications            from "../components/Notifications";import MyOrders 				from "../components/MyOrders";import Profile 					from "../components/Profile";import GetLocation 				from "../components/GetLocation";import NewLocation 				from "../components/NewLocation";import Favourite 				from "../components/Favourite";import Offers 					from "../components/Offers";import OfferPrice 				from "../components/OfferPrice";import RestWithdrawal 			from "../components/RestWithdrawal";const MainStack  	= createStackNavigator();const Drawer 	 	= createDrawerNavigator();const UserStack  	= createStackNavigator();const Tabs   	 	= createBottomTabNavigator();export function userStackStackNavigator()  {	return(		<UserStack.Navigator mode={'card'} screenOptions={{headerShown: false}} initialRouteName="home" >			<UserStack.Screen name='home' component={Home}/>			<UserStack.Screen name='profile' component={Profile}/>		</UserStack.Navigator>	);}function TabsScreen() {	return (		<Tabs.Navigator			initialRouteName="userStack"			tabBarOptions={{				activeTintColor: COLORS.mstarda,				style: [styles.footerStyle],				tabStyle : [styles.paddingVertical_5]			}}		>			<Tabs.Screen				name="userStack"				component={userStackStackNavigator}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textBold , color === COLORS.mstarda ? styles.text_mstarda : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('home')}</Text>					),					tabBarIcon: ({ color, size }) => (						<Image source={color === COLORS.mstarda ? require('../../assets/images/home_yellow.png') : require('../../assets/images/home_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />					),				}}			/>			<Tabs.Screen				name="favourite"				component={Favourite}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textBold , color === COLORS.mstarda ? styles.text_mstarda : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('favourite')}</Text>					),					tabBarIcon: ({ color, size }) => (						<Image source={color === COLORS.mstarda ? require('../../assets/images/heart_yellow.png') : require('../../assets/images/heart_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />					),				}}			/>			<Tabs.Screen				name="offers"				component={Offers}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textBold , color === COLORS.mstarda ? styles.text_mstarda : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('offers')}</Text>					),					tabBarIcon: ({ color, size }) => (						<Image source={color === COLORS.mstarda ? require('../../assets/images/discount_yellow.png') : require('../../assets/images/discount_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />					),				}}			/>			<Tabs.Screen				name="profile"				component={Profile}				options={{					tabBarLabel: ({ color, focused }) => (						<Text style={[styles.textBold , color === COLORS.mstarda ? styles.text_mstarda : styles.text_gray , styles.textCenter , styles.textSize_10]}>{i18n.t('profile')}</Text>					),					tabBarIcon: ({ color, size }) => (						<Image source={color === COLORS.mstarda ? require('../../assets/images/user_yellow.png') : require('../../assets/images/user_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />					),				}}			/>		</Tabs.Navigator>	);}function MyDrawer() {	return (		<Drawer.Navigator			initialRouteName="selectLoc"			drawerStyle={[styles.Width_75]}            drawerContentOptions={{                itemStyle: [{ backgroundColor: 'transparent' , marginHorizontal:0}],                labelStyle: [styles.textRegular ,{color:COLORS.gray }],            }}			drawerContent={(props) => <CustomDrawerContent {...props} />}>			<Drawer.Screen name='selectLoc' component={SelectLoc}/>			<Drawer.Screen name='newLocation' component={NewLocation}/>			<Drawer.Screen name="tabs" component={TabsScreen}/>			<Drawer.Screen name='myOrders' component={MyOrders}/>			<Drawer.Screen name='getLocation' component={GetLocation}/>			<Drawer.Screen name='notifications' component={Notifications}/>			<Drawer.Screen name='offerPrice' component={OfferPrice}/>			<Drawer.Screen name='restWithdrawal' component={RestWithdrawal}/>        </Drawer.Navigator>	);}export function MainStackNavigator()  {	return(		<MainStack.Navigator mode={'card'} screenOptions={{headerShown: false}}  >			<MainStack.Screen name='myDrawer' component={MyDrawer}/>		</MainStack.Navigator>	);}